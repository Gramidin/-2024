'''
По показаниям энкодера необходимо вычислить скорость (в м/с) и ускорение (в м/с2)
робота в каждый момент времени. И определить в какой момент времени у робота была 
самая высокая скорость и не повредил ли он груз

Формат входных данных:
Первая строка данных:
D - диаметр колес робота в метрах
i - редукция, передаточное число между мотором и колесом
n - число тиков энкодера на один оборот мотора
Вторая строка данных:
A - предельно допустимое ускорение торможение
Третья строка данных:
E - количество показаний энкодеров в последующем массиве
Четвертая строка данных:
E целых чисел - показания энкодеров в каждый момент времени

Формат выходных данных:
1 - Дробное положительное число - время, в которое была зафиксирована максимальная по модулю скорость, в секундах
2 - Дробное положительное число - время, в которое было зафиксировано максимально ускорение/торможение робота, в секундах.
3 - 7 - если во время движения ускорение не первышало допустимого, 
    1 - если ускорение было выше допустимого,
    -1 -если торможение было выше допустимого,
    0 - если выше допустимого усокрения и торможения.
    
Пример1:
Вход:
13.9802 263.6 112
54.7715
6
-445896924 25059452 916183550 -514759757 -886923682 -175817540
Выход:
0.03000
0.03000
0

Пример 2: (не такой результат)
Вход:
0.082 263.6 16
4.8900
6
6 13 20 28 36 42

Выход:
0.03000
0.00000
7
'''
import math 

dt = 0.01 
Vmax = 0.0 
Amax = 0.0 
tVmax = 0.0 
tAmax = 0.0 
t = 0.0 
enc_old = 0 
Vold = 0 
overAcc = 0 
overBrak = 0 

D, i, n = map(float,input().split())
n = int(n) 
Aacc = float(input()) 
E = int(input()) 
enc_list = list(map(int, input().split())) 

for enc in enc_list:
    t = t + dt 
    dEnc = enc - enc_old 
    V = (math.pi * D * dEnc) / (i * n * dt) 
    A = (V - Vold) / dt 
    if math.fabs(V) > Vmax:
        Vmax = math.fabs(V) 
        tVmax = t 
    if math.fabs(A) > Amax: 
        Amax = math.fabs(A) 
        tAmax = t 
    if A > Aacc:
        overAcc = 1 
    if -A > Aacc: 
        overBrak = 1 
        enc_old = enc 
        Vold = V 
print(tVmax)
print(tAmax) 
res = 7 
if overAcc > 0 or overBrak > 0:
    res = overAcc-overBrak 
print(res)